#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364can'\364objec\364no\364supporte\344functio\356multipl\345mus\364assignmen\364keywor\344generato\362ar\347nam\345b\345nonloca\354o\346require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364t\357typ\345issubclass(\251empt\371foun\344i\356n\357non-keywor\344allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344\341argument\363hav\345redefine\344wit\350instanc\345negativ\345sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364outsid\345impor\364inden\364lengt\350memor\371numbe\362synta\370value\363*\370afte\362a\356clas\363inde\370isn'\364oute\362rang\345tupl\345'%q\247fro\355ite\355lis\364lon\347sel\346zer\357\262ba\344ou\364a\363i\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247**\370*/*\252\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364LH\323Non\345StopIteratio\356__init__(\251abort(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344b\371byte\363callabl\345calle\344characte\362chr(\251classe\363cod\345conflic\364consisten\364coun\364")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\325\263loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\327\263\205")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\273\207\215\210target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\333pow()\203\204")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\341\217\211\213\207\215\275id")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\344should return\342")
MP_MATCH_COMPRESSED("abort() called", "\377\345\370")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\214reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported yet", "\377\356\203\204yet")
MP_MATCH_COMPRESSED("bad format string", "\377\314format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\314typecode")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\201\354\227\240")
MP_MATCH_COMPRESSED("can't convert to int", "\377\201\254\227\262")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\201\254\227str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\201create\251")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\201declare\216\234\301\374")
MP_MATCH_COMPRESSED("can't delete expression", "\377\201delete\240")
MP_MATCH_COMPRESSED("can't have multiple **x", "\377\201\246\206\330")
MP_MATCH_COMPRESSED("can't have multiple *x", "\377\201\246\206\273")
MP_MATCH_COMPRESSED("can't import name %q", "\377\201\264\214\323")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\201perform relative\264")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\201send non-None value\227\244just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377\372\213\203\234range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\204")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\255\326\207\215last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\253\260\221\266")
MP_MATCH_COMPRESSED("divide by zero", "\377divide\365\312")
MP_MATCH_COMPRESSED("empty separator", "\377\232separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\207derive\305\337")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\242")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205got\206\272\223\200\304")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\225keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\225\220\211\200\304")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\225\220positional\200\322")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\351executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\340")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\343")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\241\247\316global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\241\247\316\216")
MP_MATCH_COMPRESSED("index out of range", "\377\277\315\217\302")
MP_MATCH_COMPRESSED("indices must be integers", "\377\261\207\215integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\213\313\207\215\336\313\352\335\334")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\224micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\224\271")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\224\271\223integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\231\213\321\207\215\244\276")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\231\213\313\207\215\244\276\320\244\303\217\373")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\256\244\307\217str/bytes objects\376\250\311\202")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\361\210")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\310\262\203\204\234this\364")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\267\237\257\350\324\366")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\267\237\257heap\317locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\233")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\206\273\234\210")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\206\360\246\251lay-out\375")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\206inheritance\203\204")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\207use\211\200\223key\205")
MP_MATCH_COMPRESSED("name not defined", "\377\214\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\214too\310")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\252power\250\235float\226")
MP_MATCH_COMPRESSED("negative shift count", "\377\252shift\377")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\235\347exception\227reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\235\362\223\216\233")
MP_MATCH_COMPRESSED("no such attribute", "\377\235such\355")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\255\200")
MP_MATCH_COMPRESSED("non-keyword arg after */**", "\377\236\213\274\331")
MP_MATCH_COMPRESSED("non-keyword arg after keyword arg", "\377\236\213\274\211\213")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\202\222\226\306\210")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\202\222\226\306deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\202\260\235len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\202\300subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\202\203\275iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\202\203\367")
MP_MATCH_COMPRESSED("object not in sequence", "\377\202\203\234\253")
MP_MATCH_COMPRESSED("object not iterable", "\377\202\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\202\250\363protocol\220")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\256\244\371")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\305\232\307")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\317\232")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\262overflow")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\261")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\204")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\233")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\201find\311")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\303\277\315\217\302")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\242\260\221\266")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\230\300\275\346\357\230")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\230takes\321\320\332\245")
MP_MATCH_COMPRESSED("unexpected indent", "\377\243\265")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\243\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\214escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\222match\353\301\265level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377unsupported\230\223operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\221\270\217\245")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\221\270\217\272\227unpack")
MP_MATCH_COMPRESSED("zero step", "\377\312step")
// Total input length:      2875
// Total compressed length: 1230
// Total data length:       1128
// Predicted saving:        517

// gzip length:             1754
// Percentage of gzip:      134.4%
// zlib length:             1742
// Percentage of zlib:      135.4%
